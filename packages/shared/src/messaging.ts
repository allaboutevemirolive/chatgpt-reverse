// packages/shared/src/messaging.ts

// Message Types between UI (Popup/ContentScript/LoadScript) and Service Worker
export const MSG = {
    // Interceptor -> SW
    HEADERS_RECEIVED: "HEADERS_RECEIVED",
    AUTH_RECEIVED: "AUTH_RECEIVED",
    ACCOUNT_RECEIVED: "ACCOUNT_RECEIVED",
    CONVERSATION_LIMIT_RECEIVED: "CONVERSATION_LIMIT_RECEIVED",
    MODELS_RECEIVED: "MODELS_RECEIVED",

    // Auth (Popup -> SW)
    REGISTER_USER: "REGISTER_USER",
    LOGIN_USER: "LOGIN_USER",
    LOGOUT_USER: "LOGOUT_USER",
    GET_AUTH_STATE: "GET_AUTH_STATE",

    // Subscription/Billing (Popup -> SW)
    GET_SUBSCRIPTION_STATUS: "GET_SUBSCRIPTION_STATUS",
    CREATE_CHECKOUT_SESSION: "CREATE_CHECKOUT_SESSION",
    CREATE_CUSTOMER_PORTAL_SESSION: "CREATE_CUSTOMER_PORTAL_SESSION",

    // ChatGPT API (ContentScript -> SW)
    FETCH_CONVERSATIONS: "FETCH_CONVERSATIONS",
    FETCH_CONVERSATION: "FETCH_CONVERSATION",
    DELETE_CONVERSATION: "DELETE_CONVERSATION",
    SHARE_CONVERSATION: "SHARE_CONVERSATION",
    ARCHIVE_CONVERSATION: "ARCHIVE_CONVERSATION",
    RENAME_CONVERSATION: "RENAME_CONVERSATION",
    GENERATE_AUTOCOMPLETIONS: "GENERATE_AUTOCOMPLETIONS",
    SEND_COPY_FEEDBACK: "SEND_COPY_FEEDBACK",
    GET_AUDIO: "GET_AUDIO",
    MARK_MESSAGE_THUMBS_UP: "MARK_MESSAGE_THUMBS_UP",
    MARK_MESSAGE_THUMBS_DOWN: "MARK_MESSAGE_THUMBS_DOWN",

    // Conversation Processing (ContentScript -> SW)
    FETCH_CONVERSATION_MESSAGE_IDS: "FETCH_CONVERSATION_MESSAGE_IDS",
    FETCH_CONVERSATION_MESSAGES: "FETCH_CONVERSATION_MESSAGES",
    FETCH_CONVERSATION_CONTEXT: "FETCH_CONVERSATION_CONTEXT",
    FETCH_CONVERSATION_AUTHOR_COUNTS: "FETCH_CONVERSATION_AUTHOR_COUNTS",
    EXPORT_CONVERSATION_MARKDOWN: "EXPORT_CONVERSATION_MARKDOWN",
    COUNT_CONVERSATION_TOKENS: "COUNT_CONVERSATION_TOKENS",

    // Other Utils (Potentially from ContentScript -> SW)
    GET_COOKIE: "GET_COOKIE",

    // Broadcasts (SW -> UI)
    AUTH_STATE_UPDATED: "AUTH_STATE_UPDATED",
    SUBSCRIPTION_UPDATED: "SUBSCRIPTION_UPDATED",
} as const; // Use "as const" for stricter type checking

// Type helper for message keys
export type MessageType = (typeof MSG)[keyof typeof MSG];
