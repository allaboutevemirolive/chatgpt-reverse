/* packages/popup/src/AuthPage.module.css */

/* --- Page Layout --- */
.pageContainer {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    /* Ensure it fills the viewport */
    background-color: var(--bg-primary);
    color: var(--text-primary);
    font-family: var(--font-family);
    /* Ensure font is inherited */
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-sm) var(--space-lg);
    background-color: var(--bg-secondary);
    border-bottom: 1px solid var(--border-primary);
    position: sticky;
    /* Keep header visible */
    top: 0;
    z-index: 10;
    box-shadow: var(--shadow-sm);
}

.headerTitle {
    font-size: var(--fs-large);
    /* Use theme size */
    font-weight: var(--fw-semibold);
    color: var(--text-primary);
    margin: 0;
    white-space: nowrap;
    /* Prevent wrapping */
}

.nav {
    display: flex;
    gap: var(--space-sm);
}

/* Style Button component when used in nav (using :global is one way, but direct targeting is okay too if specific) */
/* Targeting the specific button elements passed to nav might be more robust */
/* Example: If Button component renders a <button> or <a> tag */
.nav > button,
.nav > a {
    font-size: var(--fs-medium);
    /* Adjust font size for nav items if needed */
    padding: var(--space-xs) var(--space-sm);
    /* Adjust padding */
}

.mainContent {
    flex-grow: 1;
    /* Allow main content to fill remaining space */
    padding: var(--space-xl);
    /* Padding around the main content area */
    display: flex;
    flex-direction: column;
    align-items: center;
    /* Center content horizontally */
    justify-content: flex-start;
    /* Align content to the top */
    width: 100%;
    box-sizing: border-box;
    /* Include padding in width */
}

/* Optional: Base container within mainContent if needed for centering/max-width */
.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /* Center form/pricing section */
    width: 100%;
    flex-grow: 1;
    /* Take available space */
}

/* Optional: Loading state style */
.loading {
    font-size: var(--fs-large);
    color: var(--text-secondary);
    padding: var(--space-xxl);
    /* More padding for loading state */
    text-align: center;
    flex-grow: 1;
    /* Center vertically */
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Optional: Critical error display style */
.criticalError {
    /* Inherit styles from LoginForm error message for consistency */
    /* You might need to adjust path or copy styles if compose doesn't work across files easily */
    /* composes: errorMessage from "./components/LoginForm/LoginForm.module.css"; */

    /* --- Copied/Adapted styles from LoginForm.module.css --- */
    padding: var(--space-sm);
    margin: var(--space-xl) auto;
    /* Center error message */
    border-radius: var(--radius-sm);
    font-size: var(--fs-small);
    text-align: center;
    border: 1px solid var(--border-secondary);
    background-color: color-mix(in srgb, var(--error) 15%, transparent);
    color: var(--error);
    border-color: color-mix(in srgb, var(--error) 40%, transparent);
    max-width: 500px;
    width: 90%;
    /* Ensure it doesn't touch edges */
}
